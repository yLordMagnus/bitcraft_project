// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  type CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  type ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  type SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from '../index.js';
import { CompressableQueryUpdate as __CompressableQueryUpdate } from './compressable_query_update_type.js';

export type TableUpdate = {
  tableId: number;
  tableName: string;
  numRows: bigint;
  updates: __CompressableQueryUpdate[];
};

/**
 * A namespace for generated helper functions.
 */
export namespace TableUpdate {
  /**
   * A function which returns this type represented as an AlgebraicType.
   * This function is derived from the AlgebraicType used to generate this type.
   */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement('tableId', AlgebraicType.createU32Type()),
      new ProductTypeElement('tableName', AlgebraicType.createStringType()),
      new ProductTypeElement('numRows', AlgebraicType.createU64Type()),
      new ProductTypeElement(
        'updates',
        AlgebraicType.createArrayType(
          __CompressableQueryUpdate.getTypeScriptAlgebraicType()
        )
      ),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: TableUpdate): void {
    TableUpdate.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): TableUpdate {
    return TableUpdate.getTypeScriptAlgebraicType().deserialize(reader);
  }
}
